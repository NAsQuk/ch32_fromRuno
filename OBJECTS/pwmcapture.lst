   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"pwmcapture.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	pwmcVlue
  18              		.section	.bss.pwmcVlue,"aw",%nobits
  19              		.align	2
  22              	pwmcVlue:
  23 0000 00000000 		.space	8
  23      00000000 
  24              		.section	.text.pwmcInit,"ax",%progbits
  25              		.align	1
  26              		.global	pwmcInit
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	pwmcInit:
  32              	.LFB27:
  33              		.file 1 "common/lib.stm32/pwmcapture.c"
   1:common/lib.stm32/pwmcapture.c **** /*
   2:common/lib.stm32/pwmcapture.c ****  * pwmcature.c
   3:common/lib.stm32/pwmcapture.c ****  *
   4:common/lib.stm32/pwmcapture.c ****  *  Created on: Mar 27, 2011
   5:common/lib.stm32/pwmcapture.c ****  *      Author: baron
   6:common/lib.stm32/pwmcapture.c ****  */
   7:common/lib.stm32/pwmcapture.c **** 
   8:common/lib.stm32/pwmcapture.c **** #include "pwmcapture.h"
   9:common/lib.stm32/pwmcapture.c **** 
  10:common/lib.stm32/pwmcapture.c **** #define PWMC_CHANELS_AMOUNT 2
  11:common/lib.stm32/pwmcapture.c **** 
  12:common/lib.stm32/pwmcapture.c **** uint32_t pwmcVlue[PWMC_CHANELS_AMOUNT];
  13:common/lib.stm32/pwmcapture.c **** 
  14:common/lib.stm32/pwmcapture.c **** void pwmcInit()
  15:common/lib.stm32/pwmcapture.c **** {
  34              		.loc 1 15 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 32
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 40
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  16:common/lib.stm32/pwmcapture.c **** 	GPIO_InitTypeDef GPIO_InitStructure;
  17:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitTypeDef TIM_ICInitStructure;
  18:common/lib.stm32/pwmcapture.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  19:common/lib.stm32/pwmcapture.c **** 
  20:common/lib.stm32/pwmcapture.c **** 	NVIC_InitTypeDef NVIC_InitStructure;
  21:common/lib.stm32/pwmcapture.c **** 
  22:common/lib.stm32/pwmcapture.c **** 	NVIC_InitStructure.NVIC_IRQChannel = TIM8_CC_IRQn;
  49              		.loc 1 22 37
  50 0006 2E23     		movs	r3, #46
  51 0008 3B70     		strb	r3, [r7]
  23:common/lib.stm32/pwmcapture.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
  52              		.loc 1 23 55
  53 000a 0023     		movs	r3, #0
  54 000c 7B70     		strb	r3, [r7, #1]
  24:common/lib.stm32/pwmcapture.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
  55              		.loc 1 24 48
  56 000e 0023     		movs	r3, #0
  57 0010 BB70     		strb	r3, [r7, #2]
  25:common/lib.stm32/pwmcapture.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  58              		.loc 1 25 40
  59 0012 0123     		movs	r3, #1
  60 0014 FB70     		strb	r3, [r7, #3]
  26:common/lib.stm32/pwmcapture.c **** 	NVIC_Init(&NVIC_InitStructure);
  61              		.loc 1 26 2
  62 0016 3B46     		mov	r3, r7
  63 0018 1846     		mov	r0, r3
  64 001a 294B     		ldr	r3, .L2
  65 001c 9847     		blx	r3
  66              	.LVL0:
  27:common/lib.stm32/pwmcapture.c **** 
  28:common/lib.stm32/pwmcapture.c **** 	/* GPIOC Configuration:TIM8 Channel3-4 in Input */
  29:common/lib.stm32/pwmcapture.c **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8 | GPIO_Pin_9;
  67              		.loc 1 29 30
  68 001e 4FF44073 		mov	r3, #768
  69 0022 BB83     		strh	r3, [r7, #28]	@ movhi
  30:common/lib.stm32/pwmcapture.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  70              		.loc 1 30 31
  71 0024 0423     		movs	r3, #4
  72 0026 FB77     		strb	r3, [r7, #31]
  31:common/lib.stm32/pwmcapture.c **** 	GPIO_Init(GPIOC, &GPIO_InitStructure);
  73              		.loc 1 31 2
  74 0028 07F11C03 		add	r3, r7, #28
  75 002c 1946     		mov	r1, r3
  76 002e 2548     		ldr	r0, .L2+4
  77 0030 254B     		ldr	r3, .L2+8
  78 0032 9847     		blx	r3
  79              	.LVL1:
  32:common/lib.stm32/pwmcapture.c **** 
  33:common/lib.stm32/pwmcapture.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM8, ENABLE);
  80              		.loc 1 33 2
  81 0034 0121     		movs	r1, #1
  82 0036 4FF40050 		mov	r0, #8192
  83 003a 244B     		ldr	r3, .L2+12
  84 003c 9847     		blx	r3
  85              	.LVL2:
  34:common/lib.stm32/pwmcapture.c **** 	/*---------------------------- TIM8 Configuration ----------------------------*/
  35:common/lib.stm32/pwmcapture.c **** 	/* Time base configuration */
  36:common/lib.stm32/pwmcapture.c **** 	TIM_TimeBaseStructure.TIM_Period = 65535;
  86              		.loc 1 36 35
  87 003e 4FF6FF73 		movw	r3, #65535
  88 0042 3B81     		strh	r3, [r7, #8]	@ movhi
  37:common/lib.stm32/pwmcapture.c **** 	TIM_TimeBaseStructure.TIM_Prescaler = 36000;
  89              		.loc 1 37 38
  90 0044 48F6A043 		movw	r3, #36000
  91 0048 BB80     		strh	r3, [r7, #4]	@ movhi
  38:common/lib.stm32/pwmcapture.c **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;//TIM_CKD_DIV8;
  92              		.loc 1 38 42
  93 004a 0023     		movs	r3, #0
  94 004c 7B81     		strh	r3, [r7, #10]	@ movhi
  39:common/lib.stm32/pwmcapture.c **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
  95              		.loc 1 39 40
  96 004e 0023     		movs	r3, #0
  97 0050 FB80     		strh	r3, [r7, #6]	@ movhi
  40:common/lib.stm32/pwmcapture.c **** 
  41:common/lib.stm32/pwmcapture.c **** 	TIM_TimeBaseInit(TIM8, &TIM_TimeBaseStructure);
  98              		.loc 1 41 2
  99 0052 3B1D     		adds	r3, r7, #4
 100 0054 1946     		mov	r1, r3
 101 0056 1E48     		ldr	r0, .L2+16
 102 0058 1E4B     		ldr	r3, .L2+20
 103 005a 9847     		blx	r3
 104              	.LVL3:
  42:common/lib.stm32/pwmcapture.c **** 	// Input Capture Configuration --------------------------------
  43:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_Channel = TIM_Channel_3;
 105              		.loc 1 43 34
 106 005c 0823     		movs	r3, #8
 107 005e 3B82     		strh	r3, [r7, #16]	@ movhi
  44:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
 108              		.loc 1 44 37
 109 0060 0023     		movs	r3, #0
 110 0062 7B82     		strh	r3, [r7, #18]	@ movhi
  45:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 111              		.loc 1 45 38
 112 0064 0123     		movs	r3, #1
 113 0066 BB82     		strh	r3, [r7, #20]	@ movhi
  46:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV8;
 114              		.loc 1 46 38
 115 0068 0C23     		movs	r3, #12
 116 006a FB82     		strh	r3, [r7, #22]	@ movhi
  47:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICFilter = 0x00;
 117              		.loc 1 47 35
 118 006c 0023     		movs	r3, #0
 119 006e 3B83     		strh	r3, [r7, #24]	@ movhi
  48:common/lib.stm32/pwmcapture.c **** 
  49:common/lib.stm32/pwmcapture.c **** 	TIM_ICInit(TIM8, &TIM_ICInitStructure);
 120              		.loc 1 49 2
 121 0070 07F11003 		add	r3, r7, #16
 122 0074 1946     		mov	r1, r3
 123 0076 1648     		ldr	r0, .L2+16
 124 0078 174B     		ldr	r3, .L2+24
 125 007a 9847     		blx	r3
 126              	.LVL4:
  50:common/lib.stm32/pwmcapture.c **** 	// Input Capture Configuration --------------------------------
  51:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_Channel = TIM_Channel_4;
 127              		.loc 1 51 34
 128 007c 0C23     		movs	r3, #12
 129 007e 3B82     		strh	r3, [r7, #16]	@ movhi
  52:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
 130              		.loc 1 52 37
 131 0080 0023     		movs	r3, #0
 132 0082 7B82     		strh	r3, [r7, #18]	@ movhi
  53:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 133              		.loc 1 53 38
 134 0084 0123     		movs	r3, #1
 135 0086 BB82     		strh	r3, [r7, #20]	@ movhi
  54:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICPrescaler = 0;//TIM_ICPSC_DIV8;
 136              		.loc 1 54 38
 137 0088 0023     		movs	r3, #0
 138 008a FB82     		strh	r3, [r7, #22]	@ movhi
  55:common/lib.stm32/pwmcapture.c **** 	TIM_ICInitStructure.TIM_ICFilter = 0x00;
 139              		.loc 1 55 35
 140 008c 0023     		movs	r3, #0
 141 008e 3B83     		strh	r3, [r7, #24]	@ movhi
  56:common/lib.stm32/pwmcapture.c **** 
  57:common/lib.stm32/pwmcapture.c **** 	TIM_ICInit(TIM8, &TIM_ICInitStructure);
 142              		.loc 1 57 2
 143 0090 07F11003 		add	r3, r7, #16
 144 0094 1946     		mov	r1, r3
 145 0096 0E48     		ldr	r0, .L2+16
 146 0098 0F4B     		ldr	r3, .L2+24
 147 009a 9847     		blx	r3
 148              	.LVL5:
  58:common/lib.stm32/pwmcapture.c **** 
  59:common/lib.stm32/pwmcapture.c **** 	// Enable the CC2 Interrupt Request
  60:common/lib.stm32/pwmcapture.c **** 	TIM_ITConfig(TIM8, TIM_IT_CC3, ENABLE);
 149              		.loc 1 60 2
 150 009c 0122     		movs	r2, #1
 151 009e 0821     		movs	r1, #8
 152 00a0 0B48     		ldr	r0, .L2+16
 153 00a2 0E4B     		ldr	r3, .L2+28
 154 00a4 9847     		blx	r3
 155              	.LVL6:
  61:common/lib.stm32/pwmcapture.c **** 	// Enable the CC2 Interrupt Request
  62:common/lib.stm32/pwmcapture.c **** 	TIM_ITConfig(TIM8, TIM_IT_CC4, ENABLE);
 156              		.loc 1 62 2
 157 00a6 0122     		movs	r2, #1
 158 00a8 1021     		movs	r1, #16
 159 00aa 0948     		ldr	r0, .L2+16
 160 00ac 0B4B     		ldr	r3, .L2+28
 161 00ae 9847     		blx	r3
 162              	.LVL7:
  63:common/lib.stm32/pwmcapture.c **** 
  64:common/lib.stm32/pwmcapture.c **** 	// TIM enable counter
  65:common/lib.stm32/pwmcapture.c **** 	TIM_Cmd(TIM8, ENABLE);
 163              		.loc 1 65 2
 164 00b0 0121     		movs	r1, #1
 165 00b2 0748     		ldr	r0, .L2+16
 166 00b4 0A4B     		ldr	r3, .L2+32
 167 00b6 9847     		blx	r3
 168              	.LVL8:
  66:common/lib.stm32/pwmcapture.c **** 
  67:common/lib.stm32/pwmcapture.c **** 
  68:common/lib.stm32/pwmcapture.c **** 
  69:common/lib.stm32/pwmcapture.c **** }
 169              		.loc 1 69 1
 170 00b8 00BF     		nop
 171 00ba 2037     		adds	r7, r7, #32
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 8
 174 00bc BD46     		mov	sp, r7
 175              	.LCFI4:
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed
 178 00be 80BD     		pop	{r7, pc}
 179              	.L3:
 180              		.align	2
 181              	.L2:
 182 00c0 00000000 		.word	NVIC_Init
 183 00c4 00100140 		.word	1073811456
 184 00c8 00000000 		.word	GPIO_Init
 185 00cc 00000000 		.word	RCC_APB2PeriphClockCmd
 186 00d0 00340140 		.word	1073820672
 187 00d4 00000000 		.word	TIM_TimeBaseInit
 188 00d8 00000000 		.word	TIM_ICInit
 189 00dc 00000000 		.word	TIM_ITConfig
 190 00e0 00000000 		.word	TIM_Cmd
 191              		.cfi_endproc
 192              	.LFE27:
 194              		.section	.text.TIM8_CC_IRQHandler,"ax",%progbits
 195              		.align	1
 196              		.global	TIM8_CC_IRQHandler
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 201              	TIM8_CC_IRQHandler:
 202              	.LFB28:
  70:common/lib.stm32/pwmcapture.c **** void TIM8_CC_IRQHandler(void)
  71:common/lib.stm32/pwmcapture.c **** {
 203              		.loc 1 71 1
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              	.LCFI6:
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              	.LCFI7:
 217              		.cfi_def_cfa_register 7
  72:common/lib.stm32/pwmcapture.c **** 	static uint16_t oldCC3, oldCC4,oldP4;
  73:common/lib.stm32/pwmcapture.c **** 	static int led1 = 0, led2 = 0;
  74:common/lib.stm32/pwmcapture.c **** 	uint16_t tmp;
  75:common/lib.stm32/pwmcapture.c **** 	if (TIM_GetITStatus(TIM8, TIM_IT_CC3) == SET)
 218              		.loc 1 75 6
 219 0006 0821     		movs	r1, #8
 220 0008 3248     		ldr	r0, .L10
 221 000a 334B     		ldr	r3, .L10+4
 222 000c 9847     		blx	r3
 223              	.LVL9:
 224 000e 0346     		mov	r3, r0
 225              		.loc 1 75 5
 226 0010 012B     		cmp	r3, #1
 227 0012 2BD1     		bne	.L5
  76:common/lib.stm32/pwmcapture.c **** 	{
  77:common/lib.stm32/pwmcapture.c **** 		if (led1 == 0)
 228              		.loc 1 77 12
 229 0014 314B     		ldr	r3, .L10+8
 230 0016 1B68     		ldr	r3, [r3]
 231              		.loc 1 77 6
 232 0018 002B     		cmp	r3, #0
 233 001a 04D1     		bne	.L6
  78:common/lib.stm32/pwmcapture.c **** 		{
  79:common/lib.stm32/pwmcapture.c **** 			GPIO_SetBits(GPIOB, GPIO_Pin_1);
 234              		.loc 1 79 4
 235 001c 0221     		movs	r1, #2
 236 001e 3048     		ldr	r0, .L10+12
 237 0020 304B     		ldr	r3, .L10+16
 238 0022 9847     		blx	r3
 239              	.LVL10:
 240 0024 03E0     		b	.L7
 241              	.L6:
  80:common/lib.stm32/pwmcapture.c **** 		}
  81:common/lib.stm32/pwmcapture.c **** 		else
  82:common/lib.stm32/pwmcapture.c **** 		{
  83:common/lib.stm32/pwmcapture.c **** 			GPIO_ResetBits(GPIOB, GPIO_Pin_1);
 242              		.loc 1 83 4
 243 0026 0221     		movs	r1, #2
 244 0028 2D48     		ldr	r0, .L10+12
 245 002a 2F4B     		ldr	r3, .L10+20
 246 002c 9847     		blx	r3
 247              	.LVL11:
 248              	.L7:
  84:common/lib.stm32/pwmcapture.c **** 		}
  85:common/lib.stm32/pwmcapture.c **** 		led1 ^= 1;
 249              		.loc 1 85 8
 250 002e 2B4B     		ldr	r3, .L10+8
 251 0030 1B68     		ldr	r3, [r3]
 252 0032 83F00103 		eor	r3, r3, #1
 253 0036 294A     		ldr	r2, .L10+8
 254 0038 1360     		str	r3, [r2]
  86:common/lib.stm32/pwmcapture.c **** 		// Clear TIM3 Capture compare interrupt pending bit
  87:common/lib.stm32/pwmcapture.c **** 		TIM_ClearITPendingBit(TIM8, TIM_IT_CC3);
 255              		.loc 1 87 3
 256 003a 0821     		movs	r1, #8
 257 003c 2548     		ldr	r0, .L10
 258 003e 2B4B     		ldr	r3, .L10+24
 259 0040 9847     		blx	r3
 260              	.LVL12:
  88:common/lib.stm32/pwmcapture.c **** 		tmp = TIM_GetCapture3(TIM8);
 261              		.loc 1 88 9
 262 0042 2448     		ldr	r0, .L10
 263 0044 2A4B     		ldr	r3, .L10+28
 264 0046 9847     		blx	r3
 265              	.LVL13:
 266 0048 0346     		mov	r3, r0
 267 004a FB80     		strh	r3, [r7, #6]	@ movhi
  89:common/lib.stm32/pwmcapture.c **** 
  90:common/lib.stm32/pwmcapture.c **** 		// Wind Calculation
  91:common/lib.stm32/pwmcapture.c **** 		// 100hz = 40 ms
  92:common/lib.stm32/pwmcapture.c **** 		pwmcVlue[0] = (8 * 100000000 / 25) / ((uint32_t) (tmp - oldCC3) * 5); // Convert in mm/s
 268              		.loc 1 92 57
 269 004c FB88     		ldrh	r3, [r7, #6]
 270 004e 294A     		ldr	r2, .L10+32
 271 0050 1288     		ldrh	r2, [r2]
 272 0052 9B1A     		subs	r3, r3, r2
 273              		.loc 1 92 41
 274 0054 1A46     		mov	r2, r3
 275              		.loc 1 92 67
 276 0056 1346     		mov	r3, r2
 277 0058 9B00     		lsls	r3, r3, #2
 278 005a 1344     		add	r3, r3, r2
 279              		.loc 1 92 38
 280 005c 264A     		ldr	r2, .L10+36
 281 005e B2FBF3F3 		udiv	r3, r2, r3
 282              		.loc 1 92 15
 283 0062 264A     		ldr	r2, .L10+40
 284 0064 1360     		str	r3, [r2]
  93:common/lib.stm32/pwmcapture.c **** 		oldCC3 = tmp;
 285              		.loc 1 93 10
 286 0066 234A     		ldr	r2, .L10+32
 287 0068 FB88     		ldrh	r3, [r7, #6]	@ movhi
 288 006a 1380     		strh	r3, [r2]	@ movhi
 289              	.L5:
  94:common/lib.stm32/pwmcapture.c **** 	}
  95:common/lib.stm32/pwmcapture.c **** 	if (TIM_GetITStatus(TIM8, TIM_IT_CC4) == SET)
 290              		.loc 1 95 6
 291 006c 1021     		movs	r1, #16
 292 006e 1948     		ldr	r0, .L10
 293 0070 194B     		ldr	r3, .L10+4
 294 0072 9847     		blx	r3
 295              	.LVL14:
 296 0074 0346     		mov	r3, r0
 297              		.loc 1 95 5
 298 0076 012B     		cmp	r3, #1
 299 0078 28D1     		bne	.L9
  96:common/lib.stm32/pwmcapture.c **** 	{
  97:common/lib.stm32/pwmcapture.c **** 		if (led2 == 0)
  98:common/lib.stm32/pwmcapture.c **** 		{
  99:common/lib.stm32/pwmcapture.c **** 	//		GPIO_SetBits(GPIOB, GPIO_Pin_0);
 100:common/lib.stm32/pwmcapture.c **** 		}
 101:common/lib.stm32/pwmcapture.c **** 		else
 102:common/lib.stm32/pwmcapture.c **** 		{
 103:common/lib.stm32/pwmcapture.c **** 	//		GPIO_ResetBits(GPIOB, GPIO_Pin_0);
 104:common/lib.stm32/pwmcapture.c **** 		}
 105:common/lib.stm32/pwmcapture.c **** 		led2 ^= 1;
 300              		.loc 1 105 8
 301 007a 214B     		ldr	r3, .L10+44
 302 007c 1B68     		ldr	r3, [r3]
 303 007e 83F00103 		eor	r3, r3, #1
 304 0082 1F4A     		ldr	r2, .L10+44
 305 0084 1360     		str	r3, [r2]
 106:common/lib.stm32/pwmcapture.c **** 
 107:common/lib.stm32/pwmcapture.c **** 		// Clear TIM3 Capture compare interrupt pending bit
 108:common/lib.stm32/pwmcapture.c **** 		TIM_ClearITPendingBit(TIM8, TIM_IT_CC4);
 306              		.loc 1 108 3
 307 0086 1021     		movs	r1, #16
 308 0088 1248     		ldr	r0, .L10
 309 008a 184B     		ldr	r3, .L10+24
 310 008c 9847     		blx	r3
 311              	.LVL15:
 109:common/lib.stm32/pwmcapture.c **** 		tmp = TIM_GetCapture4(TIM8);
 312              		.loc 1 109 9
 313 008e 1148     		ldr	r0, .L10
 314 0090 1C4B     		ldr	r3, .L10+48
 315 0092 9847     		blx	r3
 316              	.LVL16:
 317 0094 0346     		mov	r3, r0
 318 0096 FB80     		strh	r3, [r7, #6]	@ movhi
 110:common/lib.stm32/pwmcapture.c **** 		// Generator RPM calculation
 111:common/lib.stm32/pwmcapture.c **** 		// 500us - 1 cycle
 112:common/lib.stm32/pwmcapture.c **** 		pwmcVlue[1] = 60 * 10000000 / ((uint32_t) (tmp - oldCC4 + oldP4) * 5); // Convert in rpm*10^-3 in
 319              		.loc 1 112 50
 320 0098 FB88     		ldrh	r3, [r7, #6]
 321 009a 1B4A     		ldr	r2, .L10+52
 322 009c 1288     		ldrh	r2, [r2]
 323 009e 9B1A     		subs	r3, r3, r2
 324              		.loc 1 112 59
 325 00a0 1A4A     		ldr	r2, .L10+56
 326 00a2 1288     		ldrh	r2, [r2]
 327 00a4 1344     		add	r3, r3, r2
 328              		.loc 1 112 34
 329 00a6 1A46     		mov	r2, r3
 330              		.loc 1 112 68
 331 00a8 1346     		mov	r3, r2
 332 00aa 9B00     		lsls	r3, r3, #2
 333 00ac 1344     		add	r3, r3, r2
 334              		.loc 1 112 31
 335 00ae 184A     		ldr	r2, .L10+60
 336 00b0 B2FBF3F3 		udiv	r3, r2, r3
 337              		.loc 1 112 15
 338 00b4 114A     		ldr	r2, .L10+40
 339 00b6 5360     		str	r3, [r2, #4]
 113:common/lib.stm32/pwmcapture.c **** 		oldP4 = tmp - oldCC4;
 340              		.loc 1 113 15
 341 00b8 134B     		ldr	r3, .L10+52
 342 00ba 1B88     		ldrh	r3, [r3]
 343 00bc FA88     		ldrh	r2, [r7, #6]	@ movhi
 344 00be D31A     		subs	r3, r2, r3
 345 00c0 9AB2     		uxth	r2, r3
 346              		.loc 1 113 9
 347 00c2 124B     		ldr	r3, .L10+56
 348 00c4 1A80     		strh	r2, [r3]	@ movhi
 114:common/lib.stm32/pwmcapture.c **** 		oldCC4 = tmp;
 349              		.loc 1 114 10
 350 00c6 104A     		ldr	r2, .L10+52
 351 00c8 FB88     		ldrh	r3, [r7, #6]	@ movhi
 352 00ca 1380     		strh	r3, [r2]	@ movhi
 353              	.L9:
 115:common/lib.stm32/pwmcapture.c **** 	}
 116:common/lib.stm32/pwmcapture.c **** 
 117:common/lib.stm32/pwmcapture.c **** }
 354              		.loc 1 117 1
 355 00cc 00BF     		nop
 356 00ce 0837     		adds	r7, r7, #8
 357              	.LCFI8:
 358              		.cfi_def_cfa_offset 8
 359 00d0 BD46     		mov	sp, r7
 360              	.LCFI9:
 361              		.cfi_def_cfa_register 13
 362              		@ sp needed
 363 00d2 80BD     		pop	{r7, pc}
 364              	.L11:
 365              		.align	2
 366              	.L10:
 367 00d4 00340140 		.word	1073820672
 368 00d8 00000000 		.word	TIM_GetITStatus
 369 00dc 00000000 		.word	led1.4
 370 00e0 000C0140 		.word	1073810432
 371 00e4 00000000 		.word	GPIO_SetBits
 372 00e8 00000000 		.word	GPIO_ResetBits
 373 00ec 00000000 		.word	TIM_ClearITPendingBit
 374 00f0 00000000 		.word	TIM_GetCapture3
 375 00f4 00000000 		.word	oldCC3.3
 376 00f8 0048E801 		.word	32000000
 377 00fc 00000000 		.word	pwmcVlue
 378 0100 00000000 		.word	led2.2
 379 0104 00000000 		.word	TIM_GetCapture4
 380 0108 00000000 		.word	oldCC4.1
 381 010c 00000000 		.word	oldP4.0
 382 0110 0046C323 		.word	600000000
 383              		.cfi_endproc
 384              	.LFE28:
 386              		.section	.text.pwmcGet,"ax",%progbits
 387              		.align	1
 388              		.global	pwmcGet
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	pwmcGet:
 394              	.LFB29:
 118:common/lib.stm32/pwmcapture.c **** 
 119:common/lib.stm32/pwmcapture.c **** uint32_t pwmcGet(int i)
 120:common/lib.stm32/pwmcapture.c **** {
 395              		.loc 1 120 1
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI10:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 83B0     		sub	sp, sp, #12
 405              	.LCFI11:
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI12:
 409              		.cfi_def_cfa_register 7
 410 0006 7860     		str	r0, [r7, #4]
 121:common/lib.stm32/pwmcapture.c **** 	if (i == 0)
 411              		.loc 1 121 5
 412 0008 7B68     		ldr	r3, [r7, #4]
 413 000a 002B     		cmp	r3, #0
 414 000c 02D1     		bne	.L13
 122:common/lib.stm32/pwmcapture.c **** 	{
 123:common/lib.stm32/pwmcapture.c **** 		return pwmcVlue[0];
 415              		.loc 1 123 18
 416 000e 054B     		ldr	r3, .L15
 417 0010 1B68     		ldr	r3, [r3]
 418 0012 01E0     		b	.L14
 419              	.L13:
 124:common/lib.stm32/pwmcapture.c **** 	};
 125:common/lib.stm32/pwmcapture.c **** 	return pwmcVlue[1];
 420              		.loc 1 125 17
 421 0014 034B     		ldr	r3, .L15
 422 0016 5B68     		ldr	r3, [r3, #4]
 423              	.L14:
 126:common/lib.stm32/pwmcapture.c **** 
 127:common/lib.stm32/pwmcapture.c **** }
 424              		.loc 1 127 1
 425 0018 1846     		mov	r0, r3
 426 001a 0C37     		adds	r7, r7, #12
 427              	.LCFI13:
 428              		.cfi_def_cfa_offset 4
 429 001c BD46     		mov	sp, r7
 430              	.LCFI14:
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 001e 80BC     		pop	{r7}
 434              	.LCFI15:
 435              		.cfi_restore 7
 436              		.cfi_def_cfa_offset 0
 437 0020 7047     		bx	lr
 438              	.L16:
 439 0022 00BF     		.align	2
 440              	.L15:
 441 0024 00000000 		.word	pwmcVlue
 442              		.cfi_endproc
 443              	.LFE29:
 445              		.section	.bss.led1.4,"aw",%nobits
 446              		.align	2
 449              	led1.4:
 450 0000 00000000 		.space	4
 451              		.section	.bss.oldCC3.3,"aw",%nobits
 452              		.align	1
 455              	oldCC3.3:
 456 0000 0000     		.space	2
 457              		.section	.bss.led2.2,"aw",%nobits
 458              		.align	2
 461              	led2.2:
 462 0000 00000000 		.space	4
 463              		.section	.bss.oldCC4.1,"aw",%nobits
 464              		.align	1
 467              	oldCC4.1:
 468 0000 0000     		.space	2
 469              		.section	.bss.oldP4.0,"aw",%nobits
 470              		.align	1
 473              	oldP4.0:
 474 0000 0000     		.space	2
 475              		.text
 476              	.Letext0:
 477              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 478              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 479              		.file 4 "common/lib.stm32/CMSIS/Core/CM3/stm32f10x.h"
 480              		.file 5 "common/lib.stm32/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 481              		.file 6 "common/lib.stm32/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 482              		.file 7 "common/lib.stm32/STM32F10x_StdPeriph_Driver/inc/misc.h"
 483              		.file 8 "common/lib.stm32/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwmcapture.c
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:22     .bss.pwmcVlue:00000000 pwmcVlue
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:19     .bss.pwmcVlue:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:25     .text.pwmcInit:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:31     .text.pwmcInit:00000000 pwmcInit
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:182    .text.pwmcInit:000000c0 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:195    .text.TIM8_CC_IRQHandler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:201    .text.TIM8_CC_IRQHandler:00000000 TIM8_CC_IRQHandler
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:367    .text.TIM8_CC_IRQHandler:000000d4 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:449    .bss.led1.4:00000000 led1.4
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:455    .bss.oldCC3.3:00000000 oldCC3.3
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:461    .bss.led2.2:00000000 led2.2
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:467    .bss.oldCC4.1:00000000 oldCC4.1
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:473    .bss.oldP4.0:00000000 oldP4.0
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:387    .text.pwmcGet:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:393    .text.pwmcGet:00000000 pwmcGet
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:441    .text.pwmcGet:00000024 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:446    .bss.led1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:452    .bss.oldCC3.3:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:458    .bss.led2.2:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:464    .bss.oldCC4.1:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccOcUdXK.s:470    .bss.oldP4.0:00000000 $d

UNDEFINED SYMBOLS
NVIC_Init
GPIO_Init
RCC_APB2PeriphClockCmd
TIM_TimeBaseInit
TIM_ICInit
TIM_ITConfig
TIM_Cmd
TIM_GetITStatus
GPIO_SetBits
GPIO_ResetBits
TIM_ClearITPendingBit
TIM_GetCapture3
TIM_GetCapture4
