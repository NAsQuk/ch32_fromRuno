   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"diskrets.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	DiskretsWave
  18              		.section	.bss.DiskretsWave,"aw",%nobits
  19              		.align	2
  22              	DiskretsWave:
  23 0000 00000000 		.space	11
  23      00000000 
  23      000000
  24              		.global	DiskretsWaveOld
  25              		.section	.bss.DiskretsWaveOld,"aw",%nobits
  26              		.align	2
  29              	DiskretsWaveOld:
  30 0000 00000000 		.space	11
  30      00000000 
  30      000000
  31              		.global	DiskretsWaveFiltered
  32              		.section	.bss.DiskretsWaveFiltered,"aw",%nobits
  33              		.align	2
  36              	DiskretsWaveFiltered:
  37 0000 00000000 		.space	11
  37      00000000 
  37      000000
  38              		.global	DiskretsChangesCounter
  39              		.section	.bss.DiskretsChangesCounter,"aw",%nobits
  40              		.align	2
  43              	DiskretsChangesCounter:
  44 0000 00000000 		.space	22
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	DiskretsChangesTimer
  46              		.section	.bss.DiskretsChangesTimer,"aw",%nobits
  47              		.align	2
  50              	DiskretsChangesTimer:
  51 0000 00000000 		.space	22
  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	DiskretsWaveStateCount
  53              		.section	.bss.DiskretsWaveStateCount,"aw",%nobits
  54              		.align	2
  57              	DiskretsWaveStateCount:
  58 0000 00000000 		.space	22
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.section	.text.DiskretsClear,"ax",%progbits
  60              		.align	1
  61              		.global	DiskretsClear
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  66              	DiskretsClear:
  67              	.LFB27:
  68              		.file 1 "src/diskrets.c"
   1:src/diskrets.c **** // ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿
   2:src/diskrets.c **** #include "diskrets.h"
   3:src/diskrets.c **** #include "usermemory.h"
   4:src/diskrets.c **** 
   5:src/diskrets.c **** DISKRETS DiskretsWave[DISKRETS_AMOUNT];
   6:src/diskrets.c **** DISKRETS DiskretsWaveOld[DISKRETS_AMOUNT];
   7:src/diskrets.c **** DISKRETS DiskretsWaveFiltered[DISKRETS_AMOUNT];
   8:src/diskrets.c **** unsigned short   DiskretsChangesCounter[DISKRETS_AMOUNT];
   9:src/diskrets.c **** unsigned short   DiskretsChangesTimer[DISKRETS_AMOUNT];
  10:src/diskrets.c **** unsigned short   DiskretsWaveStateCount[DISKRETS_AMOUNT];
  11:src/diskrets.c **** 
  12:src/diskrets.c **** //=================================================================================================
  13:src/diskrets.c **** void DiskretsClear(void)
  14:src/diskrets.c **** {
  69              		.loc 1 14 1
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              	.LCFI0:
  76              		.cfi_def_cfa_offset 4
  77              		.cfi_offset 7, -4
  78 0002 83B0     		sub	sp, sp, #12
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI2:
  83              		.cfi_def_cfa_register 7
  15:src/diskrets.c ****   int i = DISKRETS_AMOUNT;
  84              		.loc 1 15 7
  85 0006 0B23     		movs	r3, #11
  86 0008 7B60     		str	r3, [r7, #4]
  16:src/diskrets.c ****   while(i--)
  87              		.loc 1 16 8
  88 000a 1DE0     		b	.L2
  89              	.L3:
  17:src/diskrets.c ****   {
  18:src/diskrets.c ****    DiskretsChangesCounter[i] = 0;
  90              		.loc 1 18 30
  91 000c 144A     		ldr	r2, .L4
  92 000e 7B68     		ldr	r3, [r7, #4]
  93 0010 0021     		movs	r1, #0
  94 0012 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  19:src/diskrets.c ****    DiskretsChangesTimer[i] = 0;
  95              		.loc 1 19 28
  96 0016 134A     		ldr	r2, .L4+4
  97 0018 7B68     		ldr	r3, [r7, #4]
  98 001a 0021     		movs	r1, #0
  99 001c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  20:src/diskrets.c ****    DiskretsWave[i] = 0;
 100              		.loc 1 20 20
 101 0020 114A     		ldr	r2, .L4+8
 102 0022 7B68     		ldr	r3, [r7, #4]
 103 0024 1344     		add	r3, r3, r2
 104 0026 0022     		movs	r2, #0
 105 0028 1A70     		strb	r2, [r3]
  21:src/diskrets.c ****    DiskretsWaveFiltered[i] = 0;
 106              		.loc 1 21 28
 107 002a 104A     		ldr	r2, .L4+12
 108 002c 7B68     		ldr	r3, [r7, #4]
 109 002e 1344     		add	r3, r3, r2
 110 0030 0022     		movs	r2, #0
 111 0032 1A70     		strb	r2, [r3]
  22:src/diskrets.c ****    DiskretsWaveOld[i] = 0;
 112              		.loc 1 22 23
 113 0034 0E4A     		ldr	r2, .L4+16
 114 0036 7B68     		ldr	r3, [r7, #4]
 115 0038 1344     		add	r3, r3, r2
 116 003a 0022     		movs	r2, #0
 117 003c 1A70     		strb	r2, [r3]
  23:src/diskrets.c ****    DiskretsWaveStateCount[i] = 0;
 118              		.loc 1 23 30
 119 003e 0D4A     		ldr	r2, .L4+20
 120 0040 7B68     		ldr	r3, [r7, #4]
 121 0042 0021     		movs	r1, #0
 122 0044 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 123              	.L2:
  16:src/diskrets.c ****   {
 124              		.loc 1 16 10
 125 0048 7B68     		ldr	r3, [r7, #4]
 126 004a 5A1E     		subs	r2, r3, #1
 127 004c 7A60     		str	r2, [r7, #4]
  16:src/diskrets.c ****   {
 128              		.loc 1 16 8
 129 004e 002B     		cmp	r3, #0
 130 0050 DCD1     		bne	.L3
  24:src/diskrets.c ****   }
  25:src/diskrets.c **** }
 131              		.loc 1 25 1
 132 0052 00BF     		nop
 133 0054 00BF     		nop
 134 0056 0C37     		adds	r7, r7, #12
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 4
 137 0058 BD46     		mov	sp, r7
 138              	.LCFI4:
 139              		.cfi_def_cfa_register 13
 140              		@ sp needed
 141 005a 80BC     		pop	{r7}
 142              	.LCFI5:
 143              		.cfi_restore 7
 144              		.cfi_def_cfa_offset 0
 145 005c 7047     		bx	lr
 146              	.L5:
 147 005e 00BF     		.align	2
 148              	.L4:
 149 0060 00000000 		.word	DiskretsChangesCounter
 150 0064 00000000 		.word	DiskretsChangesTimer
 151 0068 00000000 		.word	DiskretsWave
 152 006c 00000000 		.word	DiskretsWaveFiltered
 153 0070 00000000 		.word	DiskretsWaveOld
 154 0074 00000000 		.word	DiskretsWaveStateCount
 155              		.cfi_endproc
 156              	.LFE27:
 158              		.section	.text.DiskretSet,"ax",%progbits
 159              		.align	1
 160              		.global	DiskretSet
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	DiskretSet:
 166              	.LFB28:
  26:src/diskrets.c **** //---------------------------------------
  27:src/diskrets.c **** void DiskretSet(int num,DISKRETS vol)
  28:src/diskrets.c **** {
 167              		.loc 1 28 1
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              	.LCFI6:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 0002 83B0     		sub	sp, sp, #12
 177              	.LCFI7:
 178              		.cfi_def_cfa_offset 16
 179 0004 00AF     		add	r7, sp, #0
 180              	.LCFI8:
 181              		.cfi_def_cfa_register 7
 182 0006 7860     		str	r0, [r7, #4]
 183 0008 0B46     		mov	r3, r1
 184 000a FB70     		strb	r3, [r7, #3]
  29:src/diskrets.c ****  if( (num < DISKRETS_AMOUNT) &&
 185              		.loc 1 29 4
 186 000c 7B68     		ldr	r3, [r7, #4]
 187 000e 0A2B     		cmp	r3, #10
 188 0010 0DDC     		bgt	.L9
 189              		.loc 1 29 30 discriminator 1
 190 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 191 0014 012B     		cmp	r3, #1
 192 0016 05D0     		beq	.L8
  30:src/diskrets.c ****      ( (vol == DISKRET_STATE_ON) ||
 193              		.loc 1 30 34
 194 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 195 001a 002B     		cmp	r3, #0
 196 001c 02D0     		beq	.L8
  31:src/diskrets.c ****        (vol == DISKRET_STATE_OFF)||
 197              		.loc 1 31 34
 198 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 199 0020 FF2B     		cmp	r3, #255
 200 0022 04D0     		beq	.L9
 201              	.L8:
  32:src/diskrets.c ****        (vol != DISKRET_STATE_MAILFUNCTION) ) )
  33:src/diskrets.c ****   {
  34:src/diskrets.c ****    DiskretsWave[num] = vol;
 202              		.loc 1 34 22
 203 0024 044A     		ldr	r2, .L10
 204 0026 7B68     		ldr	r3, [r7, #4]
 205 0028 1344     		add	r3, r3, r2
 206 002a FA78     		ldrb	r2, [r7, #3]
 207 002c 1A70     		strb	r2, [r3]
 208              	.L9:
  35:src/diskrets.c ****   }
  36:src/diskrets.c **** }
 209              		.loc 1 36 1
 210 002e 00BF     		nop
 211 0030 0C37     		adds	r7, r7, #12
 212              	.LCFI9:
 213              		.cfi_def_cfa_offset 4
 214 0032 BD46     		mov	sp, r7
 215              	.LCFI10:
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0034 80BC     		pop	{r7}
 219              	.LCFI11:
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 0036 7047     		bx	lr
 223              	.L11:
 224              		.align	2
 225              	.L10:
 226 0038 00000000 		.word	DiskretsWave
 227              		.cfi_endproc
 228              	.LFE28:
 230              		.section	.text.DiskretGet,"ax",%progbits
 231              		.align	1
 232              		.global	DiskretGet
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 237              	DiskretGet:
 238              	.LFB29:
  37:src/diskrets.c **** //---------------------------------------
  38:src/diskrets.c **** // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ 
  39:src/diskrets.c **** DISKRETS DiskretGet(int num)
  40:src/diskrets.c **** {
 239              		.loc 1 40 1
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 8
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244 0000 80B4     		push	{r7}
 245              	.LCFI12:
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 7, -4
 248 0002 83B0     		sub	sp, sp, #12
 249              	.LCFI13:
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              	.LCFI14:
 253              		.cfi_def_cfa_register 7
 254 0006 7860     		str	r0, [r7, #4]
  41:src/diskrets.c ****   if (num < DISKRETS_AMOUNT)
 255              		.loc 1 41 6
 256 0008 7B68     		ldr	r3, [r7, #4]
 257 000a 0A2B     		cmp	r3, #10
 258 000c 04DC     		bgt	.L13
  42:src/diskrets.c ****       {
  43:src/diskrets.c ****         return DiskretsWaveFiltered[num];
 259              		.loc 1 43 36
 260 000e 054A     		ldr	r2, .L15
 261 0010 7B68     		ldr	r3, [r7, #4]
 262 0012 1344     		add	r3, r3, r2
 263 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 264 0016 00E0     		b	.L14
 265              	.L13:
  44:src/diskrets.c ****       }
  45:src/diskrets.c ****     return DISKRET_STATE_MAILFUNCTION;
 266              		.loc 1 45 12
 267 0018 FF23     		movs	r3, #255
 268              	.L14:
  46:src/diskrets.c **** }
 269              		.loc 1 46 1
 270 001a 1846     		mov	r0, r3
 271 001c 0C37     		adds	r7, r7, #12
 272              	.LCFI15:
 273              		.cfi_def_cfa_offset 4
 274 001e BD46     		mov	sp, r7
 275              	.LCFI16:
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 0020 80BC     		pop	{r7}
 279              	.LCFI17:
 280              		.cfi_restore 7
 281              		.cfi_def_cfa_offset 0
 282 0022 7047     		bx	lr
 283              	.L16:
 284              		.align	2
 285              	.L15:
 286 0024 00000000 		.word	DiskretsWaveFiltered
 287              		.cfi_endproc
 288              	.LFE29:
 290              		.section	.text.DiskretsProcessWave,"ax",%progbits
 291              		.align	1
 292              		.global	DiskretsProcessWave
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	DiskretsProcessWave:
 298              	.LFB30:
  47:src/diskrets.c **** //-------------------------------------------------------------------------------
  48:src/diskrets.c **** // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  49:src/diskrets.c **** //-------------------------------------------------------------------------------
  50:src/diskrets.c **** void DiskretsProcessWave(int i)
  51:src/diskrets.c **** {
 299              		.loc 1 51 1
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              	.LCFI18:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 83B0     		sub	sp, sp, #12
 309              	.LCFI19:
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              	.LCFI20:
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
  52:src/diskrets.c ****     // Noise diskrets check
  53:src/diskrets.c ****     if (DiskretsChangesTimer[i] < 40)
 315              		.loc 1 53 29
 316 0008 444A     		ldr	r2, .L27
 317 000a 7B68     		ldr	r3, [r7, #4]
 318 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 319              		.loc 1 53 8
 320 0010 272B     		cmp	r3, #39
 321 0012 0AD8     		bhi	.L18
  54:src/diskrets.c ****       {
  55:src/diskrets.c ****         DiskretsChangesTimer[i]++;
 322              		.loc 1 55 29
 323 0014 414A     		ldr	r2, .L27
 324 0016 7B68     		ldr	r3, [r7, #4]
 325 0018 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 326              		.loc 1 55 32
 327 001c 0133     		adds	r3, r3, #1
 328 001e 99B2     		uxth	r1, r3
 329 0020 3E4A     		ldr	r2, .L27
 330 0022 7B68     		ldr	r3, [r7, #4]
 331 0024 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 332 0028 16E0     		b	.L19
 333              	.L18:
  56:src/diskrets.c ****       }
  57:src/diskrets.c ****     else
  58:src/diskrets.c ****       {
  59:src/diskrets.c ****         if (DiskretsChangesCounter[i] > DISKRET_NOISE)
 334              		.loc 1 59 35
 335 002a 3D4A     		ldr	r2, .L27+4
 336 002c 7B68     		ldr	r3, [r7, #4]
 337 002e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 338              		.loc 1 59 12
 339 0032 5A2B     		cmp	r3, #90
 340 0034 06D9     		bls	.L20
  60:src/diskrets.c ****           {
  61:src/diskrets.c ****             DiskretsChangesCounter[i] = 0xFFFF;
 341              		.loc 1 61 39
 342 0036 3A4A     		ldr	r2, .L27+4
 343 0038 7B68     		ldr	r3, [r7, #4]
 344 003a 4FF6FF71 		movw	r1, #65535
 345 003e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 346 0042 09E0     		b	.L19
 347              	.L20:
  62:src/diskrets.c ****           }
  63:src/diskrets.c ****         else
  64:src/diskrets.c ****           {
  65:src/diskrets.c ****             DiskretsChangesCounter[i] = 0;
 348              		.loc 1 65 39
 349 0044 364A     		ldr	r2, .L27+4
 350 0046 7B68     		ldr	r3, [r7, #4]
 351 0048 0021     		movs	r1, #0
 352 004a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  66:src/diskrets.c ****             DiskretsChangesTimer[i] = 0;
 353              		.loc 1 66 37
 354 004e 334A     		ldr	r2, .L27
 355 0050 7B68     		ldr	r3, [r7, #4]
 356 0052 0021     		movs	r1, #0
 357 0054 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 358              	.L19:
  67:src/diskrets.c ****           };
  68:src/diskrets.c ****       }
  69:src/diskrets.c ****     // Set Mailf Diskrets
  70:src/diskrets.c ****     if ((DiskretsWave[i] == DISKRET_STATE_MAILFUNCTION))
 359              		.loc 1 70 22
 360 0058 324A     		ldr	r2, .L27+8
 361 005a 7B68     		ldr	r3, [r7, #4]
 362 005c 1344     		add	r3, r3, r2
 363 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 364              		.loc 1 70 8
 365 0060 FF2B     		cmp	r3, #255
 366 0062 0ED1     		bne	.L21
  71:src/diskrets.c ****       {
  72:src/diskrets.c ****         DiskretsWaveFiltered[i] = DISKRET_STATE_MAILFUNCTION;
 367              		.loc 1 72 33
 368 0064 304A     		ldr	r2, .L27+12
 369 0066 7B68     		ldr	r3, [r7, #4]
 370 0068 1344     		add	r3, r3, r2
 371 006a FF22     		movs	r2, #255
 372 006c 1A70     		strb	r2, [r3]
  73:src/diskrets.c ****         DiskretsWaveOld[i] = DiskretsWave[i];
 373              		.loc 1 73 42
 374 006e 2D4A     		ldr	r2, .L27+8
 375 0070 7B68     		ldr	r3, [r7, #4]
 376 0072 1344     		add	r3, r3, r2
 377 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 378              		.loc 1 73 28
 379 0076 2D4A     		ldr	r2, .L27+16
 380 0078 7B68     		ldr	r3, [r7, #4]
 381 007a 1344     		add	r3, r3, r2
 382 007c 0A46     		mov	r2, r1
 383 007e 1A70     		strb	r2, [r3]
  74:src/diskrets.c ****         return;
 384              		.loc 1 74 9
 385 0080 48E0     		b	.L17
 386              	.L21:
  75:src/diskrets.c ****       }
  76:src/diskrets.c **** 
  77:src/diskrets.c ****     // Diskrets wave processing
  78:src/diskrets.c ****     if (DiskretsWave[i] != DiskretsWaveOld[i])
 387              		.loc 1 78 21
 388 0082 284A     		ldr	r2, .L27+8
 389 0084 7B68     		ldr	r3, [r7, #4]
 390 0086 1344     		add	r3, r3, r2
 391 0088 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 392              		.loc 1 78 43
 393 008a 2849     		ldr	r1, .L27+16
 394 008c 7B68     		ldr	r3, [r7, #4]
 395 008e 0B44     		add	r3, r3, r1
 396 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 397              		.loc 1 78 8
 398 0092 9A42     		cmp	r2, r3
 399 0094 1BD0     		beq	.L23
  79:src/diskrets.c ****       {// ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï
  80:src/diskrets.c ****         DiskretsChangesCounter[i]++;
 400              		.loc 1 80 31
 401 0096 224A     		ldr	r2, .L27+4
 402 0098 7B68     		ldr	r3, [r7, #4]
 403 009a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 404              		.loc 1 80 34
 405 009e 0133     		adds	r3, r3, #1
 406 00a0 99B2     		uxth	r1, r3
 407 00a2 1F4A     		ldr	r2, .L27+4
 408 00a4 7B68     		ldr	r3, [r7, #4]
 409 00a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
  81:src/diskrets.c ****         if (DiskretsWave[i] == DISKRET_STATE_ON)
 410              		.loc 1 81 25
 411 00aa 1E4A     		ldr	r2, .L27+8
 412 00ac 7B68     		ldr	r3, [r7, #4]
 413 00ae 1344     		add	r3, r3, r2
 414 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 415              		.loc 1 81 12
 416 00b2 012B     		cmp	r3, #1
 417 00b4 05D1     		bne	.L24
  82:src/diskrets.c ****           {
  83:src/diskrets.c ****             DiskretsWaveStateCount[i] = DISKRET_POSWAVE_TIME;
 418              		.loc 1 83 39
 419 00b6 1E4A     		ldr	r2, .L27+20
 420 00b8 7B68     		ldr	r3, [r7, #4]
 421 00ba 0121     		movs	r1, #1
 422 00bc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 423 00c0 1FE0     		b	.L25
 424              	.L24:
  84:src/diskrets.c ****           }
  85:src/diskrets.c ****         else
  86:src/diskrets.c ****           {// ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ ï¿½ï¿½ï¿½
  87:src/diskrets.c ****             DiskretsWaveStateCount[i] = DISKRET_NEGWAVE_TIME;
 425              		.loc 1 87 39
 426 00c2 1B4A     		ldr	r2, .L27+20
 427 00c4 7B68     		ldr	r3, [r7, #4]
 428 00c6 0A21     		movs	r1, #10
 429 00c8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 430 00cc 19E0     		b	.L25
 431              	.L23:
  88:src/diskrets.c ****           }
  89:src/diskrets.c ****       }
  90:src/diskrets.c ****     else
  91:src/diskrets.c ****       {// ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ 0
  92:src/diskrets.c ****         if (DiskretsWaveStateCount[i] == 0)
 432              		.loc 1 92 35
 433 00ce 184A     		ldr	r2, .L27+20
 434 00d0 7B68     		ldr	r3, [r7, #4]
 435 00d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 436              		.loc 1 92 12
 437 00d6 002B     		cmp	r3, #0
 438 00d8 09D1     		bne	.L26
  93:src/diskrets.c ****           {
  94:src/diskrets.c ****             DiskretsWaveFiltered[i] = DiskretsWave[i];
 439              		.loc 1 94 51
 440 00da 124A     		ldr	r2, .L27+8
 441 00dc 7B68     		ldr	r3, [r7, #4]
 442 00de 1344     		add	r3, r3, r2
 443 00e0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 444              		.loc 1 94 37
 445 00e2 114A     		ldr	r2, .L27+12
 446 00e4 7B68     		ldr	r3, [r7, #4]
 447 00e6 1344     		add	r3, r3, r2
 448 00e8 0A46     		mov	r2, r1
 449 00ea 1A70     		strb	r2, [r3]
 450 00ec 09E0     		b	.L25
 451              	.L26:
  95:src/diskrets.c ****           }
  96:src/diskrets.c ****         else
  97:src/diskrets.c ****           {
  98:src/diskrets.c ****             DiskretsWaveStateCount[i]--;
 452              		.loc 1 98 35
 453 00ee 104A     		ldr	r2, .L27+20
 454 00f0 7B68     		ldr	r3, [r7, #4]
 455 00f2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 456              		.loc 1 98 38
 457 00f6 013B     		subs	r3, r3, #1
 458 00f8 99B2     		uxth	r1, r3
 459 00fa 0D4A     		ldr	r2, .L27+20
 460 00fc 7B68     		ldr	r3, [r7, #4]
 461 00fe 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 462              	.L25:
  99:src/diskrets.c ****           }
 100:src/diskrets.c ****       }
 101:src/diskrets.c ****      DiskretsWaveOld[i] = DiskretsWave[i];
 463              		.loc 1 101 39
 464 0102 084A     		ldr	r2, .L27+8
 465 0104 7B68     		ldr	r3, [r7, #4]
 466 0106 1344     		add	r3, r3, r2
 467 0108 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 468              		.loc 1 101 25
 469 010a 084A     		ldr	r2, .L27+16
 470 010c 7B68     		ldr	r3, [r7, #4]
 471 010e 1344     		add	r3, r3, r2
 472 0110 0A46     		mov	r2, r1
 473 0112 1A70     		strb	r2, [r3]
 474              	.L17:
 102:src/diskrets.c **** }
 475              		.loc 1 102 1
 476 0114 0C37     		adds	r7, r7, #12
 477              	.LCFI21:
 478              		.cfi_def_cfa_offset 4
 479 0116 BD46     		mov	sp, r7
 480              	.LCFI22:
 481              		.cfi_def_cfa_register 13
 482              		@ sp needed
 483 0118 80BC     		pop	{r7}
 484              	.LCFI23:
 485              		.cfi_restore 7
 486              		.cfi_def_cfa_offset 0
 487 011a 7047     		bx	lr
 488              	.L28:
 489              		.align	2
 490              	.L27:
 491 011c 00000000 		.word	DiskretsChangesTimer
 492 0120 00000000 		.word	DiskretsChangesCounter
 493 0124 00000000 		.word	DiskretsWave
 494 0128 00000000 		.word	DiskretsWaveFiltered
 495 012c 00000000 		.word	DiskretsWaveOld
 496 0130 00000000 		.word	DiskretsWaveStateCount
 497              		.cfi_endproc
 498              	.LFE30:
 500              		.section	.text.DiskretsProcess,"ax",%progbits
 501              		.align	1
 502              		.global	DiskretsProcess
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 507              	DiskretsProcess:
 508              	.LFB31:
 103:src/diskrets.c **** //-------------------------------------------------------------------------------
 104:src/diskrets.c **** // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 105:src/diskrets.c **** //-------------------------------------------------------------------------------
 106:src/diskrets.c **** void DiskretsProcess()
 107:src/diskrets.c **** {
 509              		.loc 1 107 1
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              	.LCFI24:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 82B0     		sub	sp, sp, #8
 519              	.LCFI25:
 520              		.cfi_def_cfa_offset 16
 521 0004 00AF     		add	r7, sp, #0
 522              	.LCFI26:
 523              		.cfi_def_cfa_register 7
 108:src/diskrets.c **** #ifndef RUNO
 109:src/diskrets.c **** #if(DISKRETS_AMOUNT>4*16)
 110:src/diskrets.c **** #error tmpRam too small
 111:src/diskrets.c **** #endif
 112:src/diskrets.c ****   uint16 tmpRam[4]= {0,0,0,0};
 113:src/diskrets.c **** #ifdef DISKRETS2
 114:src/diskrets.c ****  for(int i=0;i<11;i++)
 115:src/diskrets.c ****  {
 116:src/diskrets.c **** 	   DiskretsProcessWave(i+11);
 117:src/diskrets.c **** 	    if(DiskretsWaveFiltered[i+11] == DISKRET_STATE_ON)
 118:src/diskrets.c **** 	       {
 119:src/diskrets.c **** 	       tmpRam[0] |= (1<<(i&0x0f));
 120:src/diskrets.c **** 	       } else
 121:src/diskrets.c **** 	        {
 122:src/diskrets.c **** 	        tmpRam[0] &= ~(1<<(i&0x0f));
 123:src/diskrets.c **** 	        }
 124:src/diskrets.c ****  }
 125:src/diskrets.c ****  for(int i=0;i<11;i++)
 126:src/diskrets.c ****   {
 127:src/diskrets.c ****  	   DiskretsProcessWave(i+33);
 128:src/diskrets.c ****  	    if(DiskretsWaveFiltered[i+33] == DISKRET_STATE_ON)
 129:src/diskrets.c ****  	       {
 130:src/diskrets.c **** 	         tmpRam[1] |= (1<<(i&0x0f));
 131:src/diskrets.c ****  	       } else
 132:src/diskrets.c ****  	        {
 133:src/diskrets.c ****  	          tmpRam[1] &= ~(1<<(i&0x0f));
 134:src/diskrets.c ****  	        }
 135:src/diskrets.c ****   }
 136:src/diskrets.c **** #else
 137:src/diskrets.c ****  int i = DISKRETS_AMOUNT;
 138:src/diskrets.c **** 
 139:src/diskrets.c ****  while(i--)
 140:src/diskrets.c ****   {
 141:src/diskrets.c **** 	 BKP_WriteBackupRegister(BKP_DR7, 71);
 142:src/diskrets.c ****     DiskretsProcessWave(i);
 143:src/diskrets.c ****     if(DiskretsWaveFiltered[i] == DISKRET_STATE_ON)
 144:src/diskrets.c ****        {
 145:src/diskrets.c **** 
 146:src/diskrets.c ****          tmpRam[(i>>4)] |= (1<<(i&0x0f));
 147:src/diskrets.c **** 
 148:src/diskrets.c ****        } else
 149:src/diskrets.c ****         {
 150:src/diskrets.c ****           tmpRam[(i>>4)] &= ~(1<<(i&0x0f));
 151:src/diskrets.c ****         }
 152:src/diskrets.c **** 
 153:src/diskrets.c ****   }
 154:src/diskrets.c **** #endif
 155:src/diskrets.c ****   for(int i=0;i<4;i++)
 156:src/diskrets.c ****       {
 157:src/diskrets.c ****       RAM.diskrets[i] = tmpRam[i];
 158:src/diskrets.c ****       }
 159:src/diskrets.c ****   //MemSetWords(0x0000,tmpRam,4);
 160:src/diskrets.c **** #else
 161:src/diskrets.c ****   uint16 tmpRam=0;
 524              		.loc 1 161 10
 525 0006 0023     		movs	r3, #0
 526 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 162:src/diskrets.c **** 
 163:src/diskrets.c ****   int i = DISKRETS_AMOUNT;
 527              		.loc 1 163 7
 528 000a 0B23     		movs	r3, #11
 529 000c 3B60     		str	r3, [r7]
 164:src/diskrets.c **** 
 165:src/diskrets.c ****    while(i--)
 530              		.loc 1 165 9
 531 000e 23E0     		b	.L30
 532              	.L32:
 166:src/diskrets.c ****     {
 167:src/diskrets.c ****       DiskretsProcessWave(i);
 533              		.loc 1 167 7
 534 0010 3868     		ldr	r0, [r7]
 535 0012 184B     		ldr	r3, .L33
 536 0014 9847     		blx	r3
 537              	.LVL0:
 168:src/diskrets.c ****       if(DiskretsWaveFiltered[i] == DISKRET_STATE_ON)
 538              		.loc 1 168 30
 539 0016 184A     		ldr	r2, .L33+4
 540 0018 3B68     		ldr	r3, [r7]
 541 001a 1344     		add	r3, r3, r2
 542 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 543              		.loc 1 168 9
 544 001e 012B     		cmp	r3, #1
 545 0020 0CD1     		bne	.L31
 169:src/diskrets.c ****          {
 170:src/diskrets.c ****            tmpRam |= (1<<(i&0x0f));
 546              		.loc 1 170 28
 547 0022 3B68     		ldr	r3, [r7]
 548 0024 03F00F03 		and	r3, r3, #15
 549              		.loc 1 170 24
 550 0028 0122     		movs	r2, #1
 551 002a 02FA03F3 		lsl	r3, r2, r3
 552              		.loc 1 170 19
 553 002e 1AB2     		sxth	r2, r3
 554 0030 B7F90630 		ldrsh	r3, [r7, #6]
 555 0034 1343     		orrs	r3, r3, r2
 556 0036 1BB2     		sxth	r3, r3
 557 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 558 003a 0DE0     		b	.L30
 559              	.L31:
 171:src/diskrets.c ****          } else
 172:src/diskrets.c ****           {
 173:src/diskrets.c ****             tmpRam &= ~(1<<(i&0x0f));
 560              		.loc 1 173 30
 561 003c 3B68     		ldr	r3, [r7]
 562 003e 03F00F03 		and	r3, r3, #15
 563              		.loc 1 173 26
 564 0042 0122     		movs	r2, #1
 565 0044 02FA03F3 		lsl	r3, r2, r3
 566              		.loc 1 173 20
 567 0048 1BB2     		sxth	r3, r3
 568 004a DB43     		mvns	r3, r3
 569 004c 1AB2     		sxth	r2, r3
 570 004e B7F90630 		ldrsh	r3, [r7, #6]
 571 0052 1340     		ands	r3, r3, r2
 572 0054 1BB2     		sxth	r3, r3
 573 0056 FB80     		strh	r3, [r7, #6]	@ movhi
 574              	.L30:
 165:src/diskrets.c ****     {
 575              		.loc 1 165 11
 576 0058 3B68     		ldr	r3, [r7]
 577 005a 5A1E     		subs	r2, r3, #1
 578 005c 3A60     		str	r2, [r7]
 165:src/diskrets.c ****     {
 579              		.loc 1 165 9
 580 005e 002B     		cmp	r3, #0
 581 0060 D6D1     		bne	.L32
 174:src/diskrets.c ****           }
 175:src/diskrets.c **** 
 176:src/diskrets.c ****     }
 177:src/diskrets.c **** 
 178:src/diskrets.c ****   RAM.diskrets[0]=tmpRam;
 582              		.loc 1 178 18
 583 0062 064B     		ldr	r3, .L33+8
 584 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 585 0066 A3F80024 		strh	r2, [r3, #1024]	@ unaligned
 179:src/diskrets.c **** 
 180:src/diskrets.c **** #endif
 181:src/diskrets.c **** }
 586              		.loc 1 181 1
 587 006a 00BF     		nop
 588 006c 0837     		adds	r7, r7, #8
 589              	.LCFI27:
 590              		.cfi_def_cfa_offset 8
 591 006e BD46     		mov	sp, r7
 592              	.LCFI28:
 593              		.cfi_def_cfa_register 13
 594              		@ sp needed
 595 0070 80BD     		pop	{r7, pc}
 596              	.L34:
 597 0072 00BF     		.align	2
 598              	.L33:
 599 0074 00000000 		.word	DiskretsProcessWave
 600 0078 00000000 		.word	DiskretsWaveFiltered
 601 007c 00000000 		.word	RAM
 602              		.cfi_endproc
 603              	.LFE31:
 605              		.text
 606              	.Letext0:
 607              		.file 2 "common/rtos/common/utils/typedef.h"
 608              		.file 3 "src/diskrets.h"
 609              		.file 4 "src/usermemory.h"
DEFINED SYMBOLS
                            *ABS*:00000000 diskrets.c
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:22     .bss.DiskretsWave:00000000 DiskretsWave
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:19     .bss.DiskretsWave:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:29     .bss.DiskretsWaveOld:00000000 DiskretsWaveOld
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:26     .bss.DiskretsWaveOld:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:36     .bss.DiskretsWaveFiltered:00000000 DiskretsWaveFiltered
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:33     .bss.DiskretsWaveFiltered:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:43     .bss.DiskretsChangesCounter:00000000 DiskretsChangesCounter
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:40     .bss.DiskretsChangesCounter:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:50     .bss.DiskretsChangesTimer:00000000 DiskretsChangesTimer
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:47     .bss.DiskretsChangesTimer:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:57     .bss.DiskretsWaveStateCount:00000000 DiskretsWaveStateCount
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:54     .bss.DiskretsWaveStateCount:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:60     .text.DiskretsClear:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:66     .text.DiskretsClear:00000000 DiskretsClear
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:149    .text.DiskretsClear:00000060 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:159    .text.DiskretSet:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:165    .text.DiskretSet:00000000 DiskretSet
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:226    .text.DiskretSet:00000038 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:231    .text.DiskretGet:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:237    .text.DiskretGet:00000000 DiskretGet
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:286    .text.DiskretGet:00000024 $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:291    .text.DiskretsProcessWave:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:297    .text.DiskretsProcessWave:00000000 DiskretsProcessWave
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:491    .text.DiskretsProcessWave:0000011c $d
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:501    .text.DiskretsProcess:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:507    .text.DiskretsProcess:00000000 DiskretsProcess
C:\Users\Admin\AppData\Local\Temp\cc190CBK.s:599    .text.DiskretsProcess:00000074 $d

UNDEFINED SYMBOLS
RAM
